name: TempLightFlow #nome workflow
on:
  pull_request:
    branches:
      - main # executa quando tiver uma pull request no repositório

jobs: # define os Jobs que serão executados no workflow
  build: # job compilação projeto
    runs-on: ubuntu-latest # usar última versão da distribuição Ubuntu
    permissions:
      contents: write # permitir escrita em conteúdos
    steps:
      - name: Repo checkout # nome usado para clonar o repositório 
        uses: actions/checkout@v4 # action que clona o repositorio

      - name: esp-idf build # interação com o ESP-IDF
        uses: espressif/esp-idf-ci-action@v1 # action fornecida pela Espressif
        with:
          esp_idf_version: v5.4 # versão do ESP-IDF a ser utilizada
          target: esp32s2 # especifica a plataforma de compilação

      - name: Store Artifacts 
        uses: actions/upload-artifact@v4 #Armazena os artefatos gerados pela compilação
        with:
          name: TempLightFlow # especifica o nome do artefato criado
          path: build/TempLightFlow.bin

  test: # job responsável por compilar os testes unitários e gerar os artefatos relacionados
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    needs: [build] # job test só será executado se o Job build for bem-sucedido
    steps:
      - name: Repo checkout
        uses: actions/checkout@v4

      - name: Build tests
        run: |
          sudo apt-get install libcriterion-dev
          sudo apt-get install meson
          cd test
          gcc -o test test_dht.c -lcriterion
          ./test --xml > test.xml
     
      - name: Show results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() # sempre executa essa etapa
        with:
          files: test/test.xml #Arquivo com os resultados dos testes

  delivery: # job responsável pela entrega do artefato gerado
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [test] # este job depende do job "test" ser bem sucedido
    steps:
      - name: Repo checkout
        uses: actions/checkout@v4 # clona o repositório do GitHub

      - name: Download artifacts
        uses: actions/download-artifact@v4 # baixa os artefatos gerados no job "build"
        with:
          name: TempLightFlow
       
      - name: Generate dynamic tag  # gerar tag dinamicamente
        id: generate_tag
        run: echo "tag=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create release
        uses: ncipollo/release-action@v1.13.0 # action criar release
        with:
          artifacts: "TempLightFlow.bin"
          tag: ${{ env.tag }}
